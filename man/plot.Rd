% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\docType{methods}
\name{ggplotFL plot methods}
\alias{ggplotFL plot methods}
\alias{plot,FLQuant,missing-method}
\alias{plot,FLQuants,missing-method}
\alias{plot,FLQuants,FLPar-method}
\alias{plot,FLStock,missing-method}
\alias{plot,FLStock,FLStock-method}
\alias{plot,FLStock,FLPar-method}
\alias{plot,FLStocks,missing-method}
\alias{plot,FLStocks,FLPar-method}
\alias{plot,FLStock,FLStocks-method}
\alias{plot,FLStock,FLStocks,missing-method}
\alias{plot,FLSR,missing-method}
\alias{plot,FLSRs,ANY-method}
\alias{plot,FLSRs,missing-method}
\alias{plot,FLBiol,missing-method}
\alias{plot,FLBiols,missing-method}
\alias{plot,FLIndexBiomass,missing-method}
\alias{plot,FLIndex,missing-method}
\alias{plot,FLIndices,missing-method}
\title{ggplot versions of FLR class plot() methods}
\usage{
\S4method{plot}{FLQuant,missing}(x, probs = c(0.1, 0.33, 0.5, 0.66, 0.9), na.rm = FALSE, iter = NULL)

\S4method{plot}{FLQuants,missing}(x, probs = c(0.1, 0.33, 0.5, 0.66, 0.9), na.rm = FALSE, iter = NULL)

\S4method{plot}{FLQuants,FLPar}(x, y, ...)

\S4method{plot}{FLStock,missing}(x, metrics = list(Rec = rec, SSB = ssb, Catch = catch, F = fbar), ...)

\S4method{plot}{FLStock,FLStock}(
  x,
  y,
  probs = c(0.1, 0.33, 0.5, 0.66, 0.9),
  na.rm = TRUE,
  iter = NULL,
  ...
)

\S4method{plot}{FLStock,FLPar}(x, y, metrics = list(Rec = rec, SSB = ssb, Catch = catch, F = fbar), ...)

\S4method{plot}{FLStocks,missing}(
  x,
  metrics = list(Rec = rec, SSB = ssb, Catch = catch, F = fbar),
  probs = c(0.1, 0.33, 0.5, 0.66, 0.9),
  alpha = c(0.1, 0.4),
  ...
)

\S4method{plot}{FLStocks,FLPar}(
  x,
  y,
  main = "",
  xlab = "",
  ylab = "",
  na.rm = TRUE,
  foo = function(x, y) FLQuants(SSB = ssb(x)/y[, "ssb", ], F = fbar(x)/y[, "harvest",
    ], Catch = catch(x))
)

\S4method{plot}{FLStock,FLStocks}(x, y, ...)

\S4method{plot}{FLSR,missing}(x, y, ...)

\S4method{plot}{FLSRs,ANY}(x, legend_label = eqlabel, ...)

\S4method{plot}{FLBiol,missing}(x, metrics = list(Rec = function(x) n(x)[1, ], SSB = ssb), ...)

\S4method{plot}{FLBiols,missing}(x, metrics = list(Rec = function(x) n(x)[1, ], SSB = ssb), ...)

\S4method{plot}{FLIndexBiomass,missing}(x, y, ...)

\S4method{plot}{FLIndex,missing}(x)

\S4method{plot}{FLIndices,missing}(x)
}
\arguments{
\item{x}{FLR object to plot}

\item{probs}{Quantiles to be plotted if object has iters, defaults to c(0.10, 0.33, 0.50, 0.66, 0.90).}

\item{na.rm}{Should NAs be deleted in quantile calculations?, defaults to TRUE.}

\item{iter}{Individual iterations to show as worm plots over the quantiles.}

\item{y}{FLR object to plot}

\item{...}{Other arguments to be passed to the corresponding ggplot call.}

\item{metrics}{function returning an FLQuants for each FLStock}

\item{legend_label}{function to create the legend labels}

\item{type}{Type of quantile calculated, see \code{\link[stats]{quantile}}. Defaults to 7.}

\item{fill}{Colour to be used for filling of quantile poligons, defaults to 'red'.}

\item{colour}{Colour to be used for quantile lines, defaults to fill.}
}
\description{
New basic plot methods for some FLR classes are defined in ggplotFL.
}
\details{
The coertion to *data.frame* that is carried out in the plot methods sets
the argument `date=TRUE`. This generates a new column of class `POSIXct` for
the first day of the first month of each season. If the `season` dimension of
the object being plotted is of length greater than one, `date` will be used
as variable on the x axis of the plot. Otherwise, it will be `year`. Keep this
in mind when adding extra elements to the plot (see examples below).

A similar mechanism is used for the *y* axis, depending on the length of the
`iter` dimension. For objects with no *iters*, a single line is plotted for
each *FLQuant*, and the *y* axis is mapped to the `data` column of the
*data.frame*. For objects with iterations, i.e. with length greater than 1 on
the `iter` dimension, the default plots show the quantiles of the distribution
and the *y* axis is mapped to the middle quantile, by default `50%`. See the
examples below on how to refer to these variables when adding elements to the
plot.
}
\examples{

 # Plot a single FLQuant
 data(ple4)
 plot(catch.n(ple4))

 # Plot an FLQuant with iters, shows quantiles
 flq <- rnorm(100, catch(ple4), 60000)
 plot(flq)

 # Specify quantiles, default is c(0.10, 0.33, 0.50, 0.66, 0.90)
 plot(flq, probs=c(0.05, 0.25, 0.50, 0.75, 0.95))

 # Adding extra elements to an FLQuant plot, with seasons
 flq <- FLQuant(runif(200), dim=c(1,15,1,4))
 plot(flq) + geom_point(aes(x=date, y=data, colour=season))

# or without them
 flq <- FLQuant(runif(200), dim=c(1,15))
 plot(flq) + geom_point(aes(x=year, y=data))

# For an object with iter
 flq <- rlnorm(100, flq, 0.4)
 plot(flq) + geom_point(aes(x=year, y=data))

# To plot(FLQuant) as in previous versions of ggplotFL
plot(rnorm(300, catch(ple4), catch(ple4)/2), probs=c(0.10, 0.5, 0.90)) +
  geom_flquantiles(probs=c(0.01), linetype=3, colour="red", alpha=0.1) +
  geom_flquantiles(probs=c(0.99), linetype=3, colour="red", alpha=0.1)
 # Plot an FLQuants created from ple4 FLStock
 data(ple4)
 plot(FLQuants(SSB=ssb(ple4), rec=rec(ple4)))
 # plot for FLQuants, FLPar
 data(ple4)
 rps <- FLPar(F=0.14, Catch=1.29e5, Rec=9.38e5, SSB=1.8e5)
 fqs <- metrics(ple4)
 plot(fqs, rps)
 # Works also if reptsa are given for some panels
 rps <- FLPar(F=0.14, Catch=1.29e5, SSB=1.8e5)
 plot(fqs, rps)
# plot of an FLStock
 data(ple4)
 plot(ple4)
# plot for FLStock, FLPar
data(ple4)
rps <- FLPar(F=0.14, Catch=1.29e5, Rec=9.38e5, SSB=1.8e5)
plot(ple4, rps)
 # plot for FLStocks
 data(ple4)
 pls <- FLStocks(runA=ple4, runB=qapply(ple4, function(x) x*1.10))
 plot(pls)
 # plot for FLStocks
 data(ple4)
 pls <- FLStocks(runA=ple4, runB=qapply(ple4, function(x) x*1.10))
 plot(pls)

 # plot for FLSR
 data(nsher)
 plot(nsher)
 

 # plot for FLSRs
 data(nsher)
 srs <- FLSRs(sapply(c('ricker', 'bevholt'), function(x) {
   y <- nsher
   model(y) <- x
   return(fmle(y))
 }))
 plot(srs)
 
 plot(srs, legend_label=modlabel)

 # Plot a FLIndex object
 data(ple4.index)
 plot(ple4.index)
 # Plot a FLIndices object
 data(ple4.indices)
 plot(ple4.indices)
 plot(ple4.indices) +
   geom_smooth(se=FALSE, method="loess", formula=y~x, size=0.2)
}
\seealso{
\code{\link{ISOdate}} \code{\link{ggplot}}
}
